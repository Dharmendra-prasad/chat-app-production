{"version":3,"sources":["logo.svg","action/constants.js","components/header/index.js","action/auth.action.js","components/layout/index.js","container/home/index.js","action/user.actions.js","components/UI/card/index.js","container/login/index.js","container/register/index.js","components/PrivateRoute.js","App.js","reportWebVitals.js","reducers/auth.reducer.js","reducers/user.reducer.js","reducers/index.js","store/index.js","index.js"],"names":["authConstants","userConstants","Header","props","auth","useSelector","state","dispatch","useDispatch","className","style","display","authenticated","to","margin","color","fontWeight","firstName","lastName","onClick","uid","a","type","firebase","firestore","collection","doc","update","isOnline","then","signOut","localStorage","clear","catch","error","console","log","payload","Layout","children","User","user","src","alt","flex","justifyContent","HomePage","unsubscribe","useState","chatStarted","setChatStarted","chatUser","setChatUser","message","setMessage","userUid","setUserUid","useEffect","db","onSnapshot","querySnapshot","users","forEach","data","push","f","initChat","where","uid_1","uid_2","orderBy","conversations","user_uid_1","user_uid_2","length","getRealtimeConversations","map","con","textAlign","value","onChange","e","target","placeholder","msgObj","add","isView","createdAt","Date","updateMessage","Card","LoginPage","email","setEmail","password","setPassword","onSubmit","preventDefault","signInWithEmailAndPassword","name","displayName","split","loggedInUser","setItem","JSON","stringify","alert","RegisterPage","setFIrstName","setLastName","createUserWithEmailAndPassword","currentUser","updateProfile","set","signup","PrivaeRoute","Component","component","rest","getItem","parse","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","authenticating","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1401e80c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const authConstants = {\r\n    USER_LOGIN:'USER_LOGIN',\r\n    USER_LOGOUT: 'USER_LOGOUT'\r\n}\r\n\r\nexport const userConstants = {\r\n    GET_REALTIME_USERS:'GET_REALTIME_USERS',\r\n    GET_REALTIME_MESSAGES: 'GET_REALTIME_MESSAGES'\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { logout } from \"../../action\";\r\nimport \"./style.css\";\r\n\r\n/**\r\n * @author Rizwan Khan\r\n * @function Header\r\n **/\r\n\r\nconst Header = (props) => {\r\n  const auth = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  // const logout = () => {\r\n  //   dispatch(logout());\r\n  // };\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <div style={{ display: \"flex\" }}>\r\n        <div className=\"logo\">Web Messenger</div>\r\n        {!auth.authenticated ? (\r\n          <ul className=\"leftMenu\">\r\n            <li>\r\n              <NavLink to={\"/login\"}>Login</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to={\"/signup\"}>Sign up</NavLink>\r\n            </li>\r\n          </ul>\r\n        ) : null}\r\n      </div>\r\n      <div style={{ margin: \"20px 0\", color: \"#fff\", fontWeight: \"bold\" }}>\r\n        {auth.authenticated ? `${auth.firstName} ${auth.lastName}` : \"\"}\r\n      </div>\r\n      <ul className=\"menu\">\r\n        {auth.authenticated ? (\r\n          <li>\r\n            <Link to={\"#\"} onClick={()=>{\r\n              dispatch(logout(auth.uid))\r\n            }}>\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        ) : null}\r\n      </ul>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import firebase from \"firebase\";\r\nimport \"./constants\";\r\nimport { authConstants } from \"./constants\";\r\n\r\nexport const signup = (user) => {\r\n  return async (dispatch) => {\r\n    const db = firebase.firestore();\r\n\r\n    dispatch({ type: `${authConstants.USER_LOGIN}_REQUEST` });\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(user.email, user.password)\r\n      .then((data) => {\r\n        console.log(data);\r\n        const currentUser = firebase.auth().currentUser;\r\n        const name = `${user.firstName} ${user.lastName}`;\r\n        currentUser\r\n          .updateProfile({\r\n            displayName: name,\r\n          })\r\n          .then(() => {\r\n            //if you are here menas it is updated successfully\r\n            db.collection(\"users\")\r\n              .doc(data.user.uid)\r\n              .set({\r\n                firstName: user.firstName,\r\n                lastName: user.lastName,\r\n                uid: data.user.uid,\r\n                createdAt: new Date(),\r\n                isOnline: true,\r\n              })\r\n              .then(() => {\r\n                //successfull\r\n                const loggedInUser = {\r\n                  firstName: user.firstName,\r\n                  lastName: user.lastName,\r\n                  uid: data.user.uid,\r\n                  email: user.email,\r\n                };\r\n                localStorage.setItem(\"user\", JSON.stringify(loggedInUser));\r\n                console.log(\"user successfully loggedin\");\r\n                dispatch({\r\n                  type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n                  payload: { user: loggedInUser },\r\n                });\r\n              })\r\n              .catch((error) => {\r\n                console.log(error);\r\n                dispatch({\r\n                  type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n                  payload: { error },\r\n                });\r\n              });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n\r\nexport const signin = (user) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${authConstants.USER_LOGIN}_REQUEST` });\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(user.email, user.password)\r\n      .then((data) => {\r\n        console.log(data);\r\n\r\n        const db = firebase.firestore();\r\n        db.collection(\"users\")\r\n          .doc(data.user.uid)\r\n          .update({\r\n            isOnline: true,\r\n          })\r\n          .then(() => {\r\n            const name = data.user.displayName.split(\" \");\r\n            const firstName = name[0];\r\n            const lastName = name[1];\r\n            const loggedInUser = {\r\n              firstName,\r\n              lastName,\r\n              uid: data.user.uid,\r\n              email: data.user.email,\r\n            };\r\n            localStorage.setItem(\"user\", JSON.stringify(loggedInUser));\r\n            dispatch({\r\n              type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n              payload: { user: loggedInUser },\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            dispatch({\r\n              type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n              payload: { error },\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n      });\r\n  };\r\n};\r\n\r\nexport const isLoggerInUser = () => {\r\n  return async (dispatch) => {\r\n    const user = localStorage.getItem(\"user\")\r\n      ? JSON.parse(localStorage.getItem(\"user\"))\r\n      : null;\r\n    if (user) {\r\n      dispatch({\r\n        type: `${authConstants.USER_LOGIN}_SUCCESS`,\r\n        payload: { user },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: `${authConstants.USER_LOGIN}_FAILURE`,\r\n        payload: { error: \"login again please\" },\r\n      });\r\n    }\r\n  };\r\n};\r\n\r\nexport const logout = (uid) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${authConstants.USER_LOGOUT}_REQUEST` });\r\n\r\n    const db = firebase.firestore();\r\n    db.collection(\"users\")\r\n      .doc(uid)\r\n      .update({\r\n        isOnline: false,\r\n      })\r\n      .then(() => {\r\n        firebase\r\n          .auth()\r\n          .signOut()\r\n          .then(() => {\r\n            localStorage.clear();\r\n            dispatch({ type: `${authConstants.USER_LOGOUT}_SUCCESS` });\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            dispatch({\r\n              type: `${authConstants.USER_LOGOUT}_FAILURE`,\r\n              payload: { error },\r\n            });\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n","import React from 'react'\r\nimport Header from '../header'\r\n\r\n/**\r\n* @author\r\n* @function Layout\r\n**/\r\n\r\nconst Layout = (props) => {\r\n  return(\r\n    <div>\r\n       <Header/>\r\n       {props.children}\r\n    </div>\r\n   )\r\n\r\n }\r\n\r\nexport default Layout","import React, { useEffect, useState } from \"react\";\r\nimport { connectAdvanced, useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  getRealtimeConversations,\r\n  getReatltimeUsers,\r\n  updateMessage,\r\n} from \"../../action\";\r\nimport Layout from \"../../components/layout\";\r\nimport \"./style.css\";\r\n\r\nconst User = (props) => {\r\n  const { user, onClick } = props;\r\n  return (\r\n    <div onClick={() => onClick(user)} key={user.uid} className=\"displayName\">\r\n      <div className=\"displayPic\">\r\n        <img\r\n          src=\"https://i.pinimg.com/originals/be/ac/96/beac96b8e13d2198fd4bb1d5ef56cdcf.jpg\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flex: 1,\r\n          justifyContent: \"space-between\",\r\n          margin: \"0 10px\",\r\n        }}\r\n      >\r\n        <span style={{ fontWeight: 500 }}>\r\n          {user.firstName} {user.lastName}\r\n        </span>\r\n        <span\r\n          className={user.isOnline ? `onlineStatus` : `onlineStatus off`}\r\n        ></span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst HomePage = (props) => {\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector((state) => state.auth);\r\n  const user = useSelector((state) => state.user);\r\n  const [chatStarted, setChatStarted] = useState(false);\r\n  const [chatUser, setChatUser] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [userUid, setUserUid] = useState(null);\r\n\r\n  let unsubscribe;\r\n\r\n  useEffect(() => {\r\n    unsubscribe = dispatch(getReatltimeUsers(auth.uid))\r\n      .then((unsubscribe) => {\r\n        return unsubscribe;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n  //compnent will unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      //cleanup\r\n      unsubscribe.then((f) => f()).catch((error) => console.log(error));\r\n    };\r\n  }, []);\r\n\r\n  const initChat = (user) => {\r\n    setChatStarted(true);\r\n    setChatUser(`${user.firstName} ${user.lastName}`);\r\n    setUserUid(user.uid);\r\n    console.log(user);\r\n\r\n    dispatch(getRealtimeConversations({ uid_1: auth.uid, uid_2: user.uid }));\r\n  };\r\n\r\n  const submitMessage = (e) => {\r\n    const msgObj = {\r\n      user_uid_1: auth.uid,\r\n      user_uid_2: userUid,\r\n      message,\r\n    };\r\n\r\n    if (message !== \"\") {\r\n      dispatch(updateMessage(msgObj))\r\n      .then(()=>{\r\n        setMessage('')\r\n      })\r\n    }\r\n\r\n    //console.log(msgObj)\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <section className=\"container\">\r\n        <div className=\"listOfUsers\">\r\n          {user.users.length > 0\r\n            ? user.users.map((user) => {\r\n                return <User onClick={initChat} key={user.uid} user={user} />;\r\n              })\r\n            : null}\r\n        </div>\r\n        <div className=\"chatArea\">\r\n          <div className=\"chatHeader\">{chatStarted ? chatUser : \"\"}</div>\r\n          <div className=\"messageSections\">\r\n            {chatStarted\r\n              ? user.conversations.map((con) => (\r\n                  <div style={{ textAlign: con.user_uid_1 == auth.uid ? 'right':\"left\" }}>\r\n                    <p className=\"messageStyle\">{con.message}</p>\r\n                  </div>\r\n                ))\r\n              : null}\r\n          </div>\r\n          {chatStarted ? (\r\n            <div className=\"chatControls\">\r\n              <textarea\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                placeholder=\"Write message\"\r\n              />\r\n              <button onClick={submitMessage}>Send</button>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </section>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { userConstants } from \"./constants\";\r\n\r\nimport firebase from \"firebase\";\r\n\r\nexport const getReatltimeUsers = (uid) => {\r\n  return async (dispatch) => {\r\n    dispatch({ type: `${userConstants.GET_REALTIME_USERS}_REQUEST` });\r\n    const db = firebase.firestore();\r\n    const unsubscribe = db\r\n      .collection(\"users\")\r\n      //.where(\"uid\",\"!=\",uid)\r\n      .onSnapshot((querySnapshot) => {\r\n        const users = [];\r\n        querySnapshot.forEach(function (doc) {\r\n          if (doc.data().uid != uid) {\r\n            users.push(doc.data());\r\n          }\r\n        });\r\n        //console.log(users);\r\n        dispatch({\r\n          type: `${userConstants.GET_REALTIME_USERS}_SUCCESS`,\r\n          payload: { users },\r\n        });\r\n      });\r\n    return unsubscribe;\r\n  };\r\n};\r\n\r\nexport const updateMessage = (msgObj) => {\r\n  return async (dispatch) => {\r\n    const db = firebase.firestore();\r\n    db.collection(\"conversations\")\r\n      .add({\r\n        ...msgObj,\r\n        isView: false,\r\n        createdAt: new Date(),\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n\r\nexport const getRealtimeConversations = (user) => {\r\n  return async (dispatch) => {\r\n    const db = firebase.firestore();\r\n    db.collection(\"conversations\")\r\n      .where(\"user_uid_1\", \"in\", [user.uid_1, user.uid_2])\r\n      .orderBy('createdAt','asc')\r\n      .onSnapshot((querySnapshot) => {\r\n        const conversations = [];\r\n        querySnapshot.forEach((doc) => {\r\n          if (\r\n            (doc.data().user_uid_1 == user.uid_1 &&\r\n              doc.data().user_uid_2 == user.uid_2) ||\r\n            (doc.data().user_uid_1 == user.uid_2 && doc.data().user_uid_2 == user.uid_1)\r\n          ) {\r\n            conversations.push(doc.data());\r\n          }\r\n\r\n          if(conversations.length>0){\r\n            dispatch({\r\n              type:userConstants.GET_REALTIME_MESSAGES,\r\n              payload:{conversations}\r\n            })\r\n          }else{\r\n            dispatch({\r\n              type:`${userConstants.GET_REALTIME_MESSAGES}_FAILURE`,\r\n              payload:{conversations}\r\n            })\r\n          }\r\n        });\r\n        console.log(conversations);\r\n      });\r\n  };\r\n};\r\n","import React from 'react'\r\nimport \"./style.css\";\r\n/**\r\n* @author\r\n* @function Card\r\n**/\r\n\r\nconst Card = (props) => {\r\n  return(\r\n    <div className=\"card\">Card\r\n    {props.children}\r\n    </div>\r\n   )\r\n\r\n }\r\n\r\nexport default Card","import React from \"react\";\r\nimport Layout from \"../../components/layout\";\r\nimport Card from \"../../components/UI/card\";\r\nimport \"./style.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { isLoggerInUser, signin } from \"../../action\";\r\nimport { Redirect } from \"react-router\";\r\n/**\r\n * @author\r\n * @function LoginPage\r\n **/\r\n\r\nconst LoginPage = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  // useEffect(() => {\r\n  //   if (!auth.authenticated) {\r\n  //     dispatch(isLoggerInUser());\r\n  //   }\r\n  // }, []);\r\n\r\n  const userLogin = (e) => {\r\n    e.preventDefault();\r\n    if (email == \"\") {\r\n      alert(\"email is required\");\r\n      return;\r\n    }\r\n    if (password == \"\") {\r\n      alert(\"password is required\");\r\n      return;\r\n    }\r\n\r\n    dispatch(signin({ email, password }));\r\n  };\r\n  if (auth.authenticated) {\r\n    return <Redirect to={`/`} />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"loginContainer\">\r\n        <Card>\r\n          <form onSubmit={userLogin}>\r\n            <input\r\n              name=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Email\"\r\n            />\r\n\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n            />\r\n            <div>\r\n              <button>Login</button>\r\n            </div>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from \"react\";\r\nimport Layout from \"../../components/layout\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Card from \"../../components/UI/card\";\r\nimport { signup } from \"../../action\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\n/**\r\n * @author\r\n * @function RegisterPage\r\n **/\r\n\r\nconst RegisterPage = (props) => {\r\n  const [firstName, setFIrstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const registerUser = (e) => {\r\n    e.preventDefault();\r\n    \r\n    const user = {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n    };\r\n\r\n    dispatch(signup(user));\r\n  };\r\n  const auth = useSelector((state) => state.auth);\r\n  if (auth.authenticated) {\r\n    return <Redirect to={`/`} />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"registerContainer\">\r\n        <Card>\r\n          <form onSubmit={registerUser}>\r\n            <h2>Signup</h2>\r\n            <input\r\n              name=\"firstName\"\r\n              type=\"text\"\r\n              value={firstName}\r\n              onChange={(e) => setFIrstName(e.target.value)}\r\n              placeholder=\"First Name\"\r\n            />\r\n            <input\r\n              name=\"lastName\"\r\n              type=\"text\"\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n              placeholder=\"Last Name\"\r\n            />\r\n\r\n            <input\r\n              name=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              placeholder=\"Email\"\r\n            />\r\n\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              placeholder=\"Password\"\r\n            />\r\n            <div>\r\n              <button>Sign up</button>\r\n            </div>\r\n          </form>\r\n        </Card>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\n/**\r\n* @author\r\n* @function PrivaeRoute\r\n**/\r\n\r\nconst PrivaeRoute = ({component:Component,...rest}) => {\r\n  return(\r\n    <div>\r\n        <Route {...rest} component={(props)=>{\r\n            const user  = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\r\n            if(user){\r\n                return <Component {...props} />\r\n            }else{\r\n                return <Redirect to={`/login`}/>\r\n            }\r\n        }}\r\n        />\r\n    </div>\r\n   )\r\n\r\n }\r\n\r\nexport default PrivaeRoute","import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router,Route} from 'react-router-dom';\nimport HomePage from './container/home';\nimport LoginPage from './container/login';\nimport RegisterPage from './container/register';\nimport PrivaeRoute from './components/PrivateRoute';\nimport { useEffect } from 'react';\nimport { isLoggerInUser } from './action';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction App() {\n\nconst auth = useSelector(state=>state.auth)\n  const dispatch = useDispatch()\n\n\n   useEffect(() => {\n     if (!auth.authenticated) {\n       dispatch(isLoggerInUser());\n     }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        {/*only looged in user can see*/}\n\n        <PrivaeRoute path=\"/\" exact component={HomePage}/>\n        <Route path=\"/login\" exact component={LoginPage}/>\n        <Route path=\"/signup\" exact component={RegisterPage}/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { authConstants } from \"../action/constants\";\r\n\r\nconst initState = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  authenticating: false,\r\n  authenticated: false,\r\n  error: null,\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case `${authConstants.USER_LOGIN}_REQUEST`:\r\n      state = {\r\n        ...state,\r\n        authenticating: true,\r\n      };\r\n      break;\r\n    case `${authConstants.USER_LOGIN}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        ...action.payload.user,\r\n        authenticated: true,\r\n        authenticating: false,\r\n      };\r\n      break;\r\n    case `${authConstants.USER_LOGIN}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n        authenticated: false,\r\n        authenticating: false,\r\n        error: action.payload.error,\r\n      };\r\n      break;\r\n    case `${authConstants.USER_LOGOUT}_REQUEST`:\r\n      break;\r\n    case `${authConstants.USER_LOGOUT}_SUCCESS`:\r\n      state = {\r\n        ...initState,\r\n      };\r\n      break;\r\n      case `${authConstants.USER_LOGOUT}_FAILURE`:\r\n      state = {\r\n        ...state,\r\n        error:action.payload.error\r\n      };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","import { userConstants } from \"../action/constants\";\r\n\r\nconst initState = {\r\n  users: [],\r\n  conversations: [],\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case `${userConstants.GET_REALTIME_USERS}_REQUEST`:\r\n      break;\r\n    case `${userConstants.GET_REALTIME_USERS}_SUCCESS`:\r\n      state = {\r\n        ...state,\r\n        users: action.payload.users,\r\n      };\r\n      break;\r\n    case userConstants.GET_REALTIME_MESSAGES:\r\n      state = {\r\n        ...state,\r\n        conversations: action.payload.conversations,\r\n      };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","import { useReducer } from \"react\";\r\nimport { combineReducers } from \"redux\";\r\nimport authReducer from \"./auth.reducer\";\r\nimport userReducer from \"./user.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    auth:authReducer,\r\n    user: userReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore,applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst store = createStore(rootReducer,applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport firebase from \"firebase\";\nimport { Provider } from 'react-redux';\nimport store from './store';\n\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBiTv1ME3rpc4oIx3szHKJrBHLnwA8MXYM\",\n  authDomain: \"chat-app-eb739.firebaseapp.com\",\n  projectId: \"chat-app-eb739\",\n  storageBucket: \"chat-app-eb739.appspot.com\",\n  messagingSenderId: \"564946443399\",\n  appId: \"1:564946443399:web:03ab6d68c784a5dfedec22\",\n  measurementId: \"G-WQY11K1QFB\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nwindow.store = store;\n\nReactDOM.render(\n  <Provider store = { store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}